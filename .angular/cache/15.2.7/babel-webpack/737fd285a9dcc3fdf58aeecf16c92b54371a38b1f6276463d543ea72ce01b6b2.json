{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"../general-api.service\";\nimport * as i3 from \"@angular/common\";\nfunction HistogramComponent_div_24_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 15);\n  }\n}\nfunction HistogramComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" frequency \");\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵtemplate(3, HistogramComponent_div_24_div_3_Template, 1, 0, \"div\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bloodPressureRangeRaw);\n  }\n}\nfunction HistogramComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"logarithmic\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    active: a0\n  };\n};\nexport class HistogramComponent {\n  constructor(loginService, api) {\n    this.loginService = loginService;\n    this.api = api;\n    this.isRawDisplay = true;\n  }\n  ngOnInit() {\n    this.bloodPressureRangeRaw = this.generateRawRange();\n    this.bloodPressureRangeLogarithmic = this.generateLogarithmicRange();\n    // this.token = this.loginService.LoginToken;\n    // this.api.getUserBloodPressure(this.token)\n    // .pipe(first())\n    // .subscribe({\n    //   next: data => {\n    //     let what = data;\n    //   }\n    // })\n  }\n\n  switchPanel(isRaw) {\n    this.isRawDisplay = isRaw;\n  }\n  generateRawRange() {\n    let result = [];\n    let start = 80;\n    while (start <= 180) {\n      result.push(start);\n      start += 10;\n    }\n    return result;\n  }\n  generateLogarithmicRange() {\n    let result = [];\n    let start = 4.0;\n    while (start <= 5.5) {\n      result.push(start);\n      start += 0.5;\n    }\n    return result;\n  }\n}\nHistogramComponent.ɵfac = function HistogramComponent_Factory(t) {\n  return new (t || HistogramComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.GeneralApiService));\n};\nHistogramComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HistogramComponent,\n  selectors: [[\"app-hostogram\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"main-histo\"], [1, \"top-menu\"], [1, \"top-section\"], [1, \"card\", \"user-profile\"], [1, \"card\", \"control-panel\"], [1, \"buttom-section\"], [1, \"card\"], [1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"aria-current\", \"page\", \"href\", \"javascript:void(null);\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [\"href\", \"javascript:void(null);\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [1, \"card-body\", \"diagram-body\"], [4, \"ngIf\"], [1, \"diagram\"], [\"class\", \"bar\", 4, \"ngFor\", \"ngForOf\"], [1, \"bar\"]],\n  template: function HistogramComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\");\n      i0.ɵɵtext(3, \"Logout\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\")(7, \"h2\");\n      i0.ɵɵtext(8, \"My blood Pressures\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"Age\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(11, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"ul\", 7)(15, \"li\", 8)(16, \"a\", 9);\n      i0.ɵɵlistener(\"click\", function HistogramComponent_Template_a_click_16_listener() {\n        return ctx.switchPanel(true);\n      });\n      i0.ɵɵtext(17, \"Raw Data\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"li\", 8)(19, \"a\", 10);\n      i0.ɵɵlistener(\"click\", function HistogramComponent_Template_a_click_19_listener() {\n        return ctx.switchPanel(false);\n      });\n      i0.ɵɵtext(20, \"Logarithmic Data\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"h1\");\n      i0.ɵɵtext(23, \"My Blood presure histogram\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, HistogramComponent_div_24_Template, 4, 1, \"div\", 12);\n      i0.ɵɵtemplate(25, HistogramComponent_div_25_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx.isRawDisplay));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, !ctx.isRawDisplay));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRawDisplay);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRawDisplay);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 785:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Expected digit.\\\\n   \\u2577\\\\n30 \\u2502     .dia\\\\r\\\\n   \\u2502      ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\hostogram\\\\\\\\histogram.component.scss 30:6  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[785]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":";;;;;;IA6CYA,0BAEM;;;;;IARVA,2BAA0B;IACxBA,2BACA;IAGAA,+BAAqB;IACnBA,2EAEM;IACRA,iBAAM;;;;IAH6BA,eAAwB;IAAxBA,sDAAwB;;;;;IAK7DA,2BAA2B;IAAAA,2BAAW;IAAAA,iBAAM;;;;;;;;ACvCpD,OAAM,MAAOC,kBAAkB;EAQ7BC,YACUC,YAA0B,EAC1BC,GAAsB;IADtB,iBAAY,GAAZD,YAAY;IACZ,QAAG,GAAHC,GAAG;IARb,iBAAY,GAAG,IAAI;EAShB;EAEHC,QAAQ;IACN,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACC,gBAAgB,EAAE;IACpD,IAAI,CAACC,6BAA6B,GAAG,IAAI,CAACC,wBAAwB,EAAE;IAEpE;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAC,WAAW,CAACC,KAAc;IACxB,IAAI,CAACC,YAAY,GAAGD,KAAK;EAC3B;EAEAJ,gBAAgB;IACd,IAAIM,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK,GAAG,EAAE;IACd,OAAMA,KAAK,IAAI,GAAG,EAAC;MACjBD,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;MAClBA,KAAK,IAAI,EAAE;;IAEb,OAAOD,MAAM;EACf;EAEAJ,wBAAwB;IACtB,IAAII,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK,GAAG,GAAG;IACf,OAAMA,KAAK,IAAI,GAAG,EAAC;MACjBD,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;MAClBA,KAAK,IAAI,GAAG;;IAEd,OAAOD,MAAM;EACf;;AAlDWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX/BpB,8BAAwB;MAEZA,sBAAM;MAAAA,iBAAS;MAEzBA,8BAAyB;MAIfA,kCAAkB;MAAAA,iBAAK;MAC3BA,yBAAG;MAAAA,oBAAG;MAAAA,iBAAI;MAGdA,0BAAsC;MACxCA,iBAAM;MACNA,+BAA4B;MASlBA;QAAA,OAASqB,gBAAY,IAAI,CAAC;MAAA,EAAC;MAC1BrB,yBAAQ;MAAAA,iBACV;MAEHA,8BAAqB;MAKjBA;QAAA,OAASqB,gBAAY,KAAK,CAAC;MAAA,EAAC;MAC3BrB,iCAAgB;MAAAA,iBAClB;MAGLA,gCAAoC;MAC9BA,2CAA0B;MAAAA,iBAAK;MACnCA,sEAUM;MACNA,sEAA4C;MAC9CA,iBAAM;;;MA/BAA,gBAAoC;MAApCA,sEAAoC;MAUpCA,eAAqC;MAArCA,uEAAqC;MASnCA,eAAkB;MAAlBA,uCAAkB;MAWlBA,eAAmB;MAAnBA,wCAAmB","names":["i0","HistogramComponent","constructor","loginService","api","ngOnInit","bloodPressureRangeRaw","generateRawRange","bloodPressureRangeLogarithmic","generateLogarithmicRange","switchPanel","isRaw","isRawDisplay","result","start","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\hostogram\\histogram.component.html","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\hostogram\\histogram.component.ts"],"sourcesContent":["<div class=\"main-histo\">\n  <div class=\"top-menu\">\n    <button>Logout</button>\n  </div>\n  <div class=\"top-section\">\n    <div class=\"card user-profile\">\n      <!-- <img /> -->\n      <div>\n        <h2>My blood Pressures</h2>\n        <p>Age</p>\n      </div>\n    </div>\n    <div class=\"card control-panel\"></div>\n  </div>\n  <div class=\"buttom-section\">\n    <div class=\"card\">\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            [ngClass]=\"{ active: isRawDisplay }\"\n            aria-current=\"page\"\n            href=\"javascript:void(null);\"\n            (click)=\"switchPanel(true)\"\n            >Raw Data</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            [ngClass]=\"{ active: !isRawDisplay }\"\n            href=\"javascript:void(null);\"\n            (click)=\"switchPanel(false)\"\n            >Logarithmic Data</a\n          >\n        </li>\n      </ul>\n      <div class=\"card-body diagram-body\">\n        <h1>My Blood presure histogram</h1>\n        <div *ngIf=\"isRawDisplay\">\n          frequency\n          <!-- <div *ngIf=\"bloodPressure$ | async as bp\">\n\n          </div> -->\n          <div class=\"diagram\">\n            <div class=\"bar\" *ngFor=\"let col of bloodPressureRangeRaw\">\n\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!isRawDisplay\">logarithmic</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { GeneralApiService } from '../general-api.service';\nimport { Observable, first } from 'rxjs';\nimport { UserBloodPressure } from '../model/user-blood-pressure';\n\n@Component({\n  selector: 'app-hostogram',\n  templateUrl: './histogram.component.html',\n  styleUrls: ['./histogram.component.scss'],\n})\nexport class HistogramComponent implements OnInit {\n  token!: string;\n  isRawDisplay = true;\n  bloodPressureRangeRaw!: number[];\n  bloodPressureRangeLogarithmic!: number[];\n\n  bloodPressure$!: Observable<UserBloodPressure>;\n\n  constructor(\n    private loginService: LoginService,\n    private api: GeneralApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.bloodPressureRangeRaw = this.generateRawRange();\n    this.bloodPressureRangeLogarithmic = this.generateLogarithmicRange();\n\n    // this.token = this.loginService.LoginToken;\n\n    // this.api.getUserBloodPressure(this.token)\n    // .pipe(first())\n    // .subscribe({\n    //   next: data => {\n    //     let what = data;\n    //   }\n    // })\n  }\n\n  switchPanel(isRaw: boolean){\n    this.isRawDisplay = isRaw;\n  }\n\n  generateRawRange(){\n    let result = [];\n    let start = 80;\n    while(start <= 180){\n      result.push(start);\n      start += 10;\n    }\n    return result;\n  }\n\n  generateLogarithmicRange(){\n    let result = [];\n    let start = 4.0;\n    while(start <= 5.5){\n      result.push(start);\n      start += 0.5;\n    }\n    return result;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}