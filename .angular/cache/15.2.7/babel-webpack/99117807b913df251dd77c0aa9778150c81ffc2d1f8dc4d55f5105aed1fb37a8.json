{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, LoginComponent_div_9_div_2_Template, 1, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginFormfg);\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.password.errors.required);\n  }\n}\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, route, router) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_\\-\\.]+@[a-zA-Z0-9_\\-\\.]+\\.[a-zA-Z]{2,3}\")]],\n      password: ['', Validators.required]\n    });\n  }\n  get loginForm() {\n    return this.form.controls;\n  }\n  onSubmit() {}\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 11,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"button\", 9);\n      i0.ɵɵtemplate(17, LoginComponent_span_17_Template, 1, 0, \"span\", 10);\n      i0.ɵɵtext(18, \" Login \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.loginForm.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginForm.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.loginForm.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginForm.password.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".is-invalid[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmlzLWludmFsaWR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICczDC,2BAA6C;IAC3CA,2CACF;IAAAA,iBAAM;;;;;IACNA,sBAA+B;;;;;IAPjCA,+BAGC;IACCA,sEAEM;IACNA,sEAA+B;IACjCA,iBAAM;;;;IAJEA,eAAqC;IAArCA,6DAAqC;IAGrCA,eAAiB;IAAjBA,yCAAiB;;;;;IAevBA,2BAAgD;IAC9CA,sCACF;IAAAA,iBAAM;;;;;IANRA,+BAGC;IACCA,uEAEM;IACRA,iBAAM;;;;IAHEA,eAAwC;IAAxCA,gEAAwC;;;;;IAO9CA,2BAGQ;;;;;;;;ADnClB,OAAM,MAAOC,cAAc;EAKzBC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IANhB,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;EAMd;EAEHC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,OAAO,CAAC,qDAAqD,CAAC,CAAC,CAAC;MAC7GC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEA,IAAIG,SAAS;IACX,OAAO,IAAI,CAACN,IAAI,CAACO,QAAQ;EAC3B;EAEAC,QAAQ,IAER;;AAxBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BpB,8BAAkB;MACQA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACIA;QAAA,OAAYqB,cAAU;MAAA,EAAC;MAC9CrB,8BAAkB;MACUA,wBAAQ;MAAAA,iBAAQ;MAC1CA,2BAKE;MACFA,+DAQM;MACRA,iBAAM;MACNA,+BAAkB;MACUA,yBAAQ;MAAAA,iBAAQ;MAC1CA,4BAKE;MACFA,iEAOM;MACRA,iBAAM;MACNA,4BAAK;MAEDA,oEAGQ;MACRA,wBACF;MAAAA,iBAAS;;;MA3CPA,eAAkB;MAAlBA,oCAAkB;MAOlBA,eAAiE;MAAjEA,iGAAiE;MAGhEA,eAAyC;MAAzCA,kEAAyC;MAe1CA,eAAoE;MAApEA,oGAAoE;MAGnEA,eAA4C;MAA5CA,qEAA4C;MASvCA,eAAoB;MAApBA,sCAAoB;MAEvBA,eAAa;MAAbA,kCAAa","names":["Validators","i0","LoginComponent","constructor","formBuilder","route","router","ngOnInit","form","group","email","required","pattern","password","loginForm","controls","onSubmit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.ts","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form!: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9_\\-\\.]+@[a-zA-Z0-9_\\-\\.]+\\.[a-zA-Z]{2,3}\")]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get loginForm() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n\n  }\n}\n","<div class=\"card\">\n  <h4 class=\"card-header\">Login</h4>\n  <div class=\"card-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Username</label>\n        <input\n          type=\"text\"\n          formControlName=\"username\"\n          class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && loginForm.email.errors }\"\n        />\n        <div\n          *ngIf=\"submitted && loginForm.email.errors\"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"loginForm.email.errors.required\">\n            Email address is required\n          </div>\n          <div *ngIf=\"loginFormfg\"></div>\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Password</label>\n        <input\n          type=\"password\"\n          formControlName=\"password\"\n          class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && loginForm.password.errors }\"\n        />\n        <div\n          *ngIf=\"submitted && loginForm.password.errors\"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"loginForm.password.errors.required\">\n            Password is required\n          </div>\n        </div>\n      </div>\n      <div>\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm me-1\"\n          ></span>\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}