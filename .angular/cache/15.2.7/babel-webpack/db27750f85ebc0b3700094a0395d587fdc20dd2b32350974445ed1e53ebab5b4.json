{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction HistogramDiagramComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const each_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", each_r3, \" \");\n  }\n}\nfunction HistogramDiagramComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.caculateBarHeight(col_r4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getFrequency(col_r4));\n  }\n}\nfunction HistogramDiagramComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r5, \" \");\n  }\n}\nexport class HistogramDiagramComponent {\n  constructor() {\n    this.frequency = [];\n  }\n  //frequency = [0,11,34,40,60,20,88,0,7,0,0];\n  caculateBarHeight(range) {\n    return {\n      height: `${this.getFrequency(range) * 0.4}vh`\n    };\n  }\n  getFrequency(range) {\n    let index = (range - 80) / 10;\n    return this.frequency[index];\n  }\n}\nHistogramDiagramComponent.ɵfac = function HistogramDiagramComponent_Factory(t) {\n  return new (t || HistogramDiagramComponent)();\n};\nHistogramDiagramComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HistogramDiagramComponent,\n  selectors: [[\"app-histogram-diagram\"]],\n  inputs: {\n    frequencyNumber: \"frequencyNumber\",\n    bloodPressureRange: \"bloodPressureRange\",\n    frequency: \"frequency\"\n  },\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"diagram\"], [1, \"y-axis\"], [\"class\", \"each-y\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"bar\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"x-axis\"], [1, \"each-x\"], [\"class\", \"each-x\", 4, \"ngFor\", \"ngForOf\"], [1, \"each-y\"], [1, \"bar\", 3, \"ngStyle\"], [1, \"freq-num\"]],\n  template: function HistogramDiagramComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵtext(2, \" frequency \");\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtemplate(4, HistogramDiagramComponent_div_4_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, HistogramDiagramComponent_div_5_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5);\n      i0.ɵɵtext(8, \"0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, HistogramDiagramComponent_div_9_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.frequencyNumber);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bloodPressureRange);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bloodPressureRange);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgStyle],\n  styles: [\".diagram[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  height: 45vh;\\n  background-color: #c3c3c3;\\n  align-items: flex-end;\\n}\\n.diagram[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%] {\\n  width: 5vw;\\n  background-color: #6b6792;\\n  border: 1px solid;\\n  display: flex;\\n  justify-content: center;\\n  height: 30vh;\\n}\\n.diagram[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]   .freq-num[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: -5vh;\\n}\\n.diagram[_ngcontent-%COMP%]   .y-axis[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 4.5vw;\\n  border-right: 1px solid;\\n}\\n.diagram[_ngcontent-%COMP%]   .y-axis[_ngcontent-%COMP%]   .each-y[_ngcontent-%COMP%] {\\n  height: 8vh;\\n  align-self: end;\\n  border-top: black solid 1px;\\n}\\n\\n.x-axis[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  position: relative;\\n  left: 4.5vw;\\n}\\n.x-axis[_ngcontent-%COMP%]   .each-x[_ngcontent-%COMP%] {\\n  width: 4.9vw;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaGlzdG9ncmFtLWRpYWdyYW0vaGlzdG9ncmFtLWRpYWdyYW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtBQUNGO0FBQ0U7RUFDRSxVQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUFDSjtBQUNJO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0FBQ047QUFHRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtBQURKO0FBRUk7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLDJCQUFBO0FBQU47O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFGRjtBQUdFO0VBQ0UsWUFBQTtBQURKIiwic291cmNlc0NvbnRlbnQiOlsiLmRpYWdyYW17XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGhlaWdodDogNDV2aDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzNjM2MzO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuXHJcbiAgLmJhcntcclxuICAgIHdpZHRoOiA1dnc7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmI2NzkyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDMwdmg7XHJcblxyXG4gICAgLmZyZXEtbnVte1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHRvcDotNXZoO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnktYXhpc3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgd2lkdGg6IDQuNXZ3O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQ7XHJcbiAgICAuZWFjaC15e1xyXG4gICAgICBoZWlnaHQ6IDh2aDtcclxuICAgICAgYWxpZ24tc2VsZjogZW5kO1xyXG4gICAgICBib3JkZXItdG9wOiBibGFjayBzb2xpZCAxcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ueC1heGlze1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbGVmdDogNC41dnc7XHJcbiAgLmVhY2gteHtcclxuICAgIHdpZHRoOiA0Ljl2dztcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAIMA,8BAAyD;IACvDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,wCACF;;;;;IAGJA,8BAA2F;IACnEA,YAAqB;IAAAA,iBAAM;;;;;IAD9CA,0DAAkC;IACfA,eAAqB;IAArBA,iDAAqB;;;;;IAK7CA,8BAA2D;IACzDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,uCACF;;;ACVF,OAAM,MAAOC,yBAAyB;EALtCC;IAQW,cAAS,GAAU,EAAE;;EAC9B;EAEAC,iBAAiB,CAACC,KAAY;IAC5B,OAAO;MACLC,MAAM,EAAE,GAAG,IAAI,CAACC,YAAY,CAACF,KAAK,CAAC,GAAG,GAAG;KAC1C;EACH;EAEAE,YAAY,CAACF,KAAa;IACxB,IAAIG,KAAK,GAAG,CAACH,KAAK,GAAG,EAAE,IAAI,EAAE;IAC7B,OAAO,IAAI,CAACI,SAAS,CAACD,KAAK,CAAC;EAC9B;;AAfWN,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAQ;EAAAC;IAAAC;IAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MDPtChB,8BAAqB;MAEjBA,2BACA;MAAAA,8BAAoB;MAClBA,0EAEM;MACRA,iBAAM;MAERA,0EAEM;MACRA,iBAAM;MACNA,8BAAoB;MACEA,iBAAC;MAAAA,iBAAM;MAC3BA,0EAEM;MACRA,iBAAM;;;MAdqCA,eAAkB;MAAlBA,6CAAkB;MAKSA,eAAqB;MAArBA,gDAAqB;MAMrDA,eAAqB;MAArBA,gDAAqB","names":["i0","HistogramDiagramComponent","constructor","caculateBarHeight","range","height","getFrequency","index","frequency","selectors","inputs","frequencyNumber","bloodPressureRange","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\histogram-diagram\\histogram-diagram.component.html","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\histogram-diagram\\histogram-diagram.component.ts"],"sourcesContent":["<div class=\"diagram\">\n  <div>\n    frequency\n    <div class=\"y-axis\">\n      <div class=\"each-y\" *ngFor=\"let each of frequencyNumber\">\n        {{each}}\n      </div>\n    </div>\n  </div>\n  <div [ngStyle]=\"caculateBarHeight(col)\" class=\"bar\" *ngFor=\"let col of bloodPressureRange\">\n    <div class=\"freq-num\">{{getFrequency(col)}}</div>\n  </div>\n</div>\n<div class=\"x-axis\">\n  <div class=\"each-x\">0</div>\n  <div class=\"each-x\" *ngFor=\"let col of bloodPressureRange\">\n    {{col}}\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-histogram-diagram',\n  templateUrl: './histogram-diagram.component.html',\n  styleUrls: ['./histogram-diagram.component.scss']\n})\nexport class HistogramDiagramComponent {\n  @Input() frequencyNumber!: number[];\n  @Input() bloodPressureRange!: number[];\n  @Input() frequency:number = [];\n  //frequency = [0,11,34,40,60,20,88,0,7,0,0];\n\n  caculateBarHeight(range:number){\n    return {\n      height: `${this.getFrequency(range) * 0.4}vh`\n    }\n  }\n\n  getFrequency(range: number){\n    let index = (range - 80) / 10;\n    return this.frequency[index]\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}