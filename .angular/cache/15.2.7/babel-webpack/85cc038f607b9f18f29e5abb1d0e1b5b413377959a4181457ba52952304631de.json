{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../general-api.service\";\nimport * as i4 from \"../login.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" This is not an proper email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, LoginComponent_div_13_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitted && ctx_r0.formEmail.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitted && ctx_r0.formEmail.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_18_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmitted && ctx_r1.formPassword.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Please check if email and password matches \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, router, api, loginService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.api = api;\n    this.loginService = loginService;\n    this.isSubmitted = false;\n    this.accountNotFound = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', Validators.required]\n    });\n  }\n  get formEmail() {\n    return this.form.controls['email'];\n  }\n  get formPassword() {\n    return this.form.controls['password'];\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    let user = {\n      id: null,\n      email: this.formEmail.value,\n      password: this.formPassword.value\n    };\n    this.api.login(user).pipe(first()).subscribe({\n      next: data => {\n        if (data.length === 0) {\n          this.accountNotFound = true;\n        } else {\n          this.accountNotFound = false;\n          let token = data[0].token || \"\";\n          this.loginService.LoginToken = token;\n          this.router.navigateByUrl('hostogram');\n        }\n      },\n      error: error => {},\n      complete: () => {}\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GeneralApiService), i0.ɵɵdirectiveInject(i4.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 10,\n  consts: [[1, \"login-page\"], [1, \"info\"], [1, \"card-header\", \"login-header\"], [1, \"card\", \"login-form\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"submit-button\"], [1, \"btn\", \"btn-primary\"], [\"class\", \"invalid-submit\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"invalid-submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Welcome to UOL clinical data center\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h4\");\n      i0.ɵɵtext(5, \"Here you can find health info of yourself\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 11)(20, \"button\", 12);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.isSubmitted && ctx.formEmail.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.formEmail.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.isSubmitted && ctx.formPassword.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.formPassword.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.accountNotFound);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".is-invalid[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.login-page[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  padding-top: 25%;\\n}\\n.login-page[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%] {\\n  width: 45%;\\n  margin: 5%;\\n}\\n.login-page[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   .login-header[_ngcontent-%COMP%] {\\n  color: blue;\\n  font-size: xxx-large;\\n  font-weight: bolder;\\n}\\n.login-page[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n  width: 30%;\\n  margin-right: 5%;\\n}\\n.login-page[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.login-page[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   .invalid-submit[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtBQUNGO0FBQ0U7RUFDRSxVQUFBO0VBQ0EsVUFBQTtBQUNKO0FBQ0k7RUFDRSxXQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtBQUNOO0FBR0U7RUFDRSxVQUFBO0VBQ0EsZ0JBQUE7QUFESjtBQUlFO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRko7QUFJSTtFQUNFLGtCQUFBO0FBRk4iLCJzb3VyY2VzQ29udGVudCI6WyIuaXMtaW52YWxpZHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5sb2dpbi1wYWdle1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwYWRkaW5nLXRvcDogMjUlO1xyXG5cclxuICAuaW5mb3tcclxuICAgIHdpZHRoOiA0NSU7XHJcbiAgICBtYXJnaW46IDUlO1xyXG5cclxuICAgIC5sb2dpbi1oZWFkZXJ7XHJcbiAgICAgIGNvbG9yOiBibHVlO1xyXG4gICAgICBmb250LXNpemU6IHh4eC1sYXJnZTtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sb2dpbi1mb3Jte1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIG1hcmdpbi1yaWdodDogNSU7XHJcbiAgfVxyXG5cclxuICAuc3VibWl0LWJ1dHRvbntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgIC5pbnZhbGlkLXN1Ym1pdHtcclxuICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","first","i0","LoginComponent","constructor","formBuilder","router","api","loginService","ngOnInit","form","group","email","required","pattern","password","formEmail","controls","formPassword","onSubmit","isSubmitted","invalid","user","id","value","login","pipe","subscribe","next","data","length","accountNotFound","token","LoginToken","navigateByUrl","error","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.ts","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GeneralApiService } from '../general-api.service';\nimport { User } from '../model/user';\nimport { first } from 'rxjs';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form!: FormGroup;\n  isSubmitted = false;\n  accountNotFound = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private api: GeneralApiService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get formEmail() {\n    return this.form.controls['email'];\n  }\n\n  get formPassword() {\n    return this.form.controls['password'];\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if(this.form.invalid){\n      return;\n    }\n\n    let user:User = {\n      id: null,\n      email: this.formEmail.value,\n      password: this.formPassword.value\n    }\n\n    this.api.login(user)\n    .pipe(first())\n    .subscribe({\n      next: data => {\n        if(data.length === 0){\n          this.accountNotFound = true;\n        }\n        else{\n          this.accountNotFound = false;\n          let token = data[0].token || \"\";\n          this.loginService.LoginToken = token;\n          this.router.navigateByUrl('hostogram');\n        }\n\n      },\n      error: error => {},\n      complete: () => {}\n  })\n  }\n}\n","<div class=\"login-page\">\n    <div class=\"info\">\n        <h1 class=\"card-header login-header\">Welcome to UOL clinical data center</h1>\n        <h4>Here you can find health info of yourself</h4>\n    </div>\n    <div class=\"card login-form\">\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                formControlName=\"email\"\n                class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': isSubmitted && formEmail.errors }\"\n              />\n              <div\n                *ngIf=\"isSubmitted && formEmail.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"isSubmitted && formEmail.errors['required']\">\n                  Email address is required\n                </div>\n                <div *ngIf=\"isSubmitted && formEmail.errors['pattern']\">\n                  This is not an proper email address\n                </div>\n              </div>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Password</label>\n              <input\n                type=\"password\"\n                formControlName=\"password\"\n                class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': isSubmitted && formPassword.errors }\"\n              />\n              <div\n                *ngIf=\"isSubmitted && formPassword.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"isSubmitted && formPassword.errors['required']\">\n                  Password is required\n                </div>\n              </div>\n            </div>\n            <div class=\"submit-button\">\n              <button class=\"btn btn-primary\">\n                Login\n              </button>\n              <div class=\"invalid-submit\" *ngIf=\"isSubmitted && accountNotFound\">\n                Please check if email and password matches\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}