{"ast":null,"code":"import { BehaviorSubject, combineLatest, first, map, switchMap, timer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../general-api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../histogram-diagram/histogram-diagram.component\";\nfunction HistogramComponent_div_54_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-histogram-diagram\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bp_r3 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"frequencyNumber\", ctx_r2.frequencyNumber)(\"bloodPressureRange\", ctx_r2.bloodPressureRangeRaw)(\"frequency\", ctx_r2.calRawBucketValues(bp_r3));\n  }\n}\nfunction HistogramComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HistogramComponent_div_54_div_1_Template, 2, 3, \"div\", 28);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.bloodPressure$));\n  }\n}\nfunction HistogramComponent_div_55_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-histogram-diagram\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bp_r5 = ctx.ngIf;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"frequencyNumber\", ctx_r4.frequencyNumber)(\"bloodPressureRange\", ctx_r4.bloodPressureRangeLogarithmic)(\"frequency\", ctx_r4.calLogBucketValues(bp_r5));\n  }\n}\nfunction HistogramComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HistogramComponent_div_55_div_1_Template, 2, 3, \"div\", 28);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r1.bloodPressure$));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    active: a0\n  };\n};\nexport class HistogramComponent {\n  constructor(loginService, router, api) {\n    this.loginService = loginService;\n    this.router = router;\n    this.api = api;\n    this.isRawDisplay = true;\n    this.frequencyNumber = [20, 40, 60, 80, 100].reverse();\n    this.pollInterval = 5;\n    this.minValue = 80;\n    this.maxValue = 180;\n    this.minMaxValueSub$ = new BehaviorSubject([this.minValue, this.maxValue]);\n    this.pollIntervalSub$ = new BehaviorSubject(5);\n  }\n  ngOnInit() {\n    this.bloodPressureRangeRaw = this.generateRawRange();\n    this.bloodPressureRangeLogarithmic = this.generateLogarithmicRange();\n    this.token = this.loginService.LoginToken;\n    this.bloodPressureBaseValues$ = this.pollIntervalSub$.pipe(switchMap(val => timer(0, val * 1000).pipe(switchMap(() => this.api.getUserBloodPressure(this.token).pipe(first())), map(data => data[0].bloodPressure))));\n    this.bloodPressure$ = combineLatest([this.bloodPressureBaseValues$, this.minMaxValueSub$]).pipe(map(([baseBloodPressureValues, minMax]) => baseBloodPressureValues.filter(each => each >= minMax[0] && each <= minMax[1])));\n  }\n  switchPanel(isRaw) {\n    this.isRawDisplay = isRaw;\n  }\n  generateRawRange() {\n    let result = [];\n    let start = 80;\n    while (start <= 200) {\n      result.push(start);\n      start += 10;\n    }\n    return result;\n  }\n  generateLogarithmicRange() {\n    let result = [];\n    let start = 4.0;\n    while (start <= 5.4) {\n      result.push(start);\n      start += 0.2;\n      start = parseFloat(start.toFixed(1));\n    }\n    return result;\n  }\n  calRawBucketValues(data) {\n    let result = new Array(11);\n    result.fill(0);\n    for (let each of data) {\n      let index = this.calculateRawInterval(each);\n      result[index] += 1;\n    }\n    return result;\n  }\n  calLogBucketValues(data) {\n    let result = new Array(8);\n    result.fill(0);\n    for (let each of data) {\n      let index = this.calculateLogInterval(Math.log(each));\n      result[index] += 1;\n    }\n    return result;\n  }\n  calculateRawInterval(num) {\n    let index = 0;\n    for (let i = 0; i < this.bloodPressureRangeRaw.length - 1; i++) {\n      if (num >= this.bloodPressureRangeRaw[i] && num < this.bloodPressureRangeRaw[i + 1]) {\n        index = i + 1;\n      }\n    }\n    return index;\n  }\n  calculateLogInterval(num) {\n    let index = 0;\n    for (let i = 0; i < this.bloodPressureRangeLogarithmic.length - 1; i++) {\n      if (num >= this.bloodPressureRangeLogarithmic[i] && num < this.bloodPressureRangeLogarithmic[i + 1]) {\n        index = i + 1;\n      }\n    }\n    return index;\n  }\n  pollIntervalChanged() {\n    this.pollInterval = Math.abs(this.pollInterval);\n    this.pollIntervalSub$.next(this.pollInterval);\n  }\n  minmaxChanged() {\n    if (this.minValue > this.maxValue) {\n      this.minValue = 80;\n      this.maxValue = 180;\n    }\n    this.minMaxValueSub$.next([this.minValue, this.maxValue]);\n  }\n  logout() {\n    this.loginService.LoginToken = '';\n    this.router.navigateByUrl('');\n  }\n}\nHistogramComponent.ɵfac = function HistogramComponent_Factory(t) {\n  return new (t || HistogramComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GeneralApiService));\n};\nHistogramComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HistogramComponent,\n  selectors: [[\"app-hostogram\"]],\n  decls: 56,\n  vars: 13,\n  consts: [[1, \"histo-body\"], [1, \"main-histo\"], [1, \"card\", \"top-menu\"], [1, \"uol-icon\"], [\"src\", \"assets/img/uol.jpg\"], [1, \"logout-button\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"top-section\"], [1, \"card\", \"shadow\", \"user-profile\"], [\"src\", \"assets/img/profile.png\"], [1, \"basic-infos\"], [1, \"card\", \"shadow\", \"control-panel\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"reminding\"], [1, \"poll-input\"], [\"for\", \"poll\"], [\"id\", \"poll\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"second\"], [\"for\", \"minRange\", 1, \"form-label\"], [\"type\", \"range\", \"min\", \"80\", \"max\", \"180\", \"step\", \"1\", \"id\", \"minRange\", 1, \"form-range\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"maxRange\", 1, \"form-label\"], [\"type\", \"range\", \"min\", \"80\", \"max\", \"180\", \"step\", \"1\", \"id\", \"maxRange\", 1, \"form-range\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"buttom-section\"], [1, \"card\", \"shadow\"], [1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"aria-current\", \"page\", \"href\", \"javascript:void(null);\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [\"href\", \"javascript:void(null);\", 1, \"nav-link\", 3, \"ngClass\", \"click\"], [1, \"card-body\", \"diagram-body\"], [4, \"ngIf\"], [3, \"frequencyNumber\", \"bloodPressureRange\", \"frequency\"]],\n  template: function HistogramComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function HistogramComponent_Template_button_click_6_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(7, \"Logout\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"div\");\n      i0.ɵɵelement(11, \"img\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"h4\");\n      i0.ɵɵtext(14, \"My Blood Pressure\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵtext(16, \"Age : 27\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\");\n      i0.ɵɵtext(18, \"City : Luxembourg City\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12);\n      i0.ɵɵtext(21, \" Please press enter or click white place after you changing the poll interval \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Poll Interval:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function HistogramComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.pollInterval = $event;\n      })(\"change\", function HistogramComponent_Template_input_change_25_listener() {\n        return ctx.pollIntervalChanged();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 16);\n      i0.ɵɵtext(27, \"(s)\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 12);\n      i0.ɵɵtext(29, \" Can use keyboard arrows or mouse to control the range,when min value is greater than max value will reset the range back to 80 to 180, should always be(min < max) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\")(31, \"label\", 17);\n      i0.ɵɵtext(32, \"Min Value(80-180)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function HistogramComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.minValue = $event;\n      })(\"change\", function HistogramComponent_Template_input_change_33_listener() {\n        return ctx.minmaxChanged();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\");\n      i0.ɵɵtext(35);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\")(37, \"label\", 19);\n      i0.ɵɵtext(38, \"Max Value(80-180)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function HistogramComponent_Template_input_ngModelChange_39_listener($event) {\n        return ctx.maxValue = $event;\n      })(\"change\", function HistogramComponent_Template_input_change_39_listener() {\n        return ctx.minmaxChanged();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\");\n      i0.ɵɵtext(41);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(42, \"div\", 21)(43, \"div\", 22)(44, \"ul\", 23)(45, \"li\", 24)(46, \"a\", 25);\n      i0.ɵɵlistener(\"click\", function HistogramComponent_Template_a_click_46_listener() {\n        return ctx.switchPanel(true);\n      });\n      i0.ɵɵtext(47, \"Raw Datum\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"li\", 24)(49, \"a\", 26);\n      i0.ɵɵlistener(\"click\", function HistogramComponent_Template_a_click_49_listener() {\n        return ctx.switchPanel(false);\n      });\n      i0.ɵɵtext(50, \"Logarithmic Datum\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"div\", 27)(52, \"h2\");\n      i0.ɵɵtext(53, \"My Blood Pressure Histogram\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(54, HistogramComponent_div_54_Template, 3, 3, \"div\", 28);\n      i0.ɵɵtemplate(55, HistogramComponent_div_55_Template, 3, 3, \"div\", 28);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngModel\", ctx.pollInterval);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.minValue);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.minValue);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.maxValue);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.maxValue);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.isRawDisplay));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, !ctx.isRawDisplay));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRawDisplay);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRawDisplay);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.RangeValueAccessor, i5.NgControlStatus, i5.NgModel, i6.HistogramDiagramComponent, i4.AsyncPipe],\n  styles: [\".histo-body[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  align-content: center;\\n  flex-flow: column wrap;\\n  height: 100vh;\\n  background-image: linear-gradient(to right, #e3161d, #03a3ed);\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-left: 14vw;\\n  margin-right: 14vw;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  margin-bottom: 5vh;\\n  justify-content: space-between;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-menu[_ngcontent-%COMP%]   .uol-icon[_ngcontent-%COMP%] {\\n  width: 4.5vh;\\n  height: 4.5vh;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-menu[_ngcontent-%COMP%]   .uol-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: auto;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-menu[_ngcontent-%COMP%]   .logout-button[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  height: 30vh;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .reminding[_ngcontent-%COMP%] {\\n  font-size: small;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-evenly;\\n  width: 38vw;\\n  padding-top: 10vh;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%]   .basic-infos[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .control-panel[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-evenly;\\n  padding: 2%;\\n  width: 48vw;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .control-panel[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 0;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .control-panel[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .control-panel[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 20vw;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .top-section[_ngcontent-%COMP%]   .control-panel[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .buttom-section[_ngcontent-%COMP%] {\\n  height: 48vh;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .buttom-section[_ngcontent-%COMP%]   .diagram-body[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  height: 55vh;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .buttom-section[_ngcontent-%COMP%]   .diagram-body[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-weight: 800;\\n}\\n.histo-body[_ngcontent-%COMP%]   .main-histo[_ngcontent-%COMP%]   .buttom-section[_ngcontent-%COMP%]   .diagram-body[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  height: 48vh;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9zdG9ncmFtL2hpc3RvZ3JhbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSw2REFBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBQ0o7QUFDSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsOEJBQUE7QUFDTjtBQUNNO0VBQ0UsWUFBQTtFQUNBLGFBQUE7QUFDUjtBQUNRO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFDVjtBQUdNO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRFI7QUFLSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUFITjtBQUtNO0VBQ0UsZ0JBQUE7QUFIUjtBQU1NO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7QUFKUjtBQU1RO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBSlY7QUFRTTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7QUFOUjtBQU9RO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtBQUxWO0FBT1U7RUFDRSxrQkFBQTtBQUxaO0FBT1U7RUFDRSxXQUFBO0FBTFo7QUFPVTtFQUNFLGtCQUFBO0FBTFo7QUFXSTtFQUNFLFlBQUE7QUFUTjtBQVdNO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0FBVFI7QUFXUTtFQUNFLGdCQUFBO0FBVFY7QUFZUTtFQUNFLFlBQUE7QUFWViIsInNvdXJjZXNDb250ZW50IjpbIi5oaXN0by1ib2R5e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2UzMTYxZCwgIzAzYTNlZCk7XHJcbiAgXHJcbiAgLm1haW4taGlzdG97XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNHZ3O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNHZ3O1xyXG5cclxuICAgIC50b3AtbWVudXtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNXZoO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAudW9sLWljb257XHJcbiAgICAgICAgd2lkdGg6IDQuNXZoO1xyXG4gICAgICAgIGhlaWdodDogNC41dmg7XHJcblxyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmxvZ291dC1idXR0b257XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRvcC1zZWN0aW9ue1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBoZWlnaHQ6IDMwdmg7XHJcblxyXG4gICAgICAucmVtaW5kaW5ne1xyXG4gICAgICAgIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC51c2VyLXByb2ZpbGV7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgICAgIHdpZHRoOiAzOHZ3O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxMHZoO1xyXG5cclxuICAgICAgICAuYmFzaWMtaW5mb3N7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5jb250cm9sLXBhbmVse1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICBwYWRkaW5nOiAyJTtcclxuICAgICAgICB3aWR0aDogNDh2dztcclxuICAgICAgICBkaXZ7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgIHBhZGRpbmc6IDA7XHJcblxyXG4gICAgICAgICAgbGFiZWx7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlucHV0e1xyXG4gICAgICAgICAgICB3aWR0aDogMjB2dztcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICBkaXZ7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYnV0dG9tLXNlY3Rpb257XHJcbiAgICAgIGhlaWdodDogNDh2aDtcclxuXHJcbiAgICAgIC5kaWFncmFtLWJvZHl7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGhlaWdodDogNTV2aDtcclxuXHJcbiAgICAgICAgaDJ7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGl2e1xyXG4gICAgICAgICAgaGVpZ2h0OiA0OHZoO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SACEA,eAAe,EAGfC,aAAa,EAEbC,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,KAAK,QACA,MAAM;;;;;;;;;;ICiFDC,2BAA0C;IACxCA,4CAIyB;IAC3BA,iBAAM;;;;;IAJFA,eAAmC;IAAnCA,wDAAmC;;;;;IAHzCA,2BAA0B;IACxBA,2EAMM;;IACRA,iBAAM;;;;IAPEA,eAA6B;IAA7BA,kEAA6B;;;;;IASnCA,2BAA0C;IACxCA,4CAIyB;IAC3BA,iBAAM;;;;;IAJFA,eAAmC;IAAnCA,wDAAmC;;;;;IAHzCA,2BAA2B;IACzBA,2EAMM;;IACRA,iBAAM;;;;IAPEA,eAA6B;IAA7BA,kEAA6B;;;;;;;;ADjF/C,OAAM,MAAOC,kBAAkB;EAmB7BC,YACUC,YAA0B,EAC1BC,MAAc,EACdC,GAAsB;IAFtB,iBAAY,GAAZF,YAAY;IACZ,WAAM,GAANC,MAAM;IACN,QAAG,GAAHC,GAAG;IApBb,iBAAY,GAAG,IAAI;IAGnB,oBAAe,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAACC,OAAO,EAAE;IACjD,iBAAY,GAAG,CAAC;IAIhB,aAAQ,GAAG,EAAE;IACb,aAAQ,GAAG,GAAG;IACN,oBAAe,GAAG,IAAIZ,eAAe,CAAW,CACtD,IAAI,CAACa,QAAQ,EACb,IAAI,CAACC,QAAQ,CACd,CAAC;IAEM,qBAAgB,GAAG,IAAId,eAAe,CAAS,CAAC,CAAC;EAMtD;EAEHe,QAAQ;IACN,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACC,gBAAgB,EAAE;IACpD,IAAI,CAACC,6BAA6B,GAAG,IAAI,CAACC,wBAAwB,EAAE;IAEpE,IAAI,CAACC,KAAK,GAAG,IAAI,CAACX,YAAY,CAACY,UAAU;IAEzC,IAAI,CAACC,wBAAwB,GAAG,IAAI,CAACC,gBAAgB,CAACC,IAAI,CACxDpB,SAAS,CAAEqB,GAAG,IACZpB,KAAK,CAAC,CAAC,EAAEoB,GAAG,GAAG,IAAI,CAAC,CAACD,IAAI,CACvBpB,SAAS,CAAC,MACR,IAAI,CAACO,GAAG,CAACe,oBAAoB,CAAC,IAAI,CAACN,KAAK,CAAC,CAACI,IAAI,CAACtB,KAAK,EAAE,CAAC,CACxD,EACDC,GAAG,CAAEwB,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAACC,aAAa,CAAC,CACrC,CACF,CACF;IAED,IAAI,CAACC,cAAc,GAAG5B,aAAa,CAAC,CAClC,IAAI,CAACqB,wBAAwB,EAC7B,IAAI,CAACQ,eAAe,CACrB,CAAC,CAACN,IAAI,CACLrB,GAAG,CAAC,CAAC,CAAC4B,uBAAuB,EAAEC,MAAM,CAAC,KACpCD,uBAAuB,CAACE,MAAM,CAC3BC,IAAI,IAAKA,IAAI,IAAIF,MAAM,CAAC,CAAC,CAAC,IAAIE,IAAI,IAAIF,MAAM,CAAC,CAAC,CAAC,CACjD,CACF,CACF;EACH;EAEAG,WAAW,CAACC,KAAc;IACxB,IAAI,CAACC,YAAY,GAAGD,KAAK;EAC3B;EAEAnB,gBAAgB;IACd,IAAIqB,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK,GAAG,EAAE;IACd,OAAOA,KAAK,IAAI,GAAG,EAAE;MACnBD,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;MAClBA,KAAK,IAAI,EAAE;;IAEb,OAAOD,MAAM;EACf;EAEAnB,wBAAwB;IACtB,IAAImB,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK,GAAG,GAAG;IACf,OAAOA,KAAK,IAAI,GAAG,EAAE;MACnBD,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;MAClBA,KAAK,IAAI,GAAG;MACZA,KAAK,GAAGE,UAAU,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEtC,OAAOJ,MAAM;EACf;EAEAK,kBAAkB,CAAChB,IAAc;IAC/B,IAAIW,MAAM,GAAG,IAAIM,KAAK,CAAC,EAAE,CAAC;IAC1BN,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC;IACd,KAAK,IAAIX,IAAI,IAAIP,IAAI,EAAE;MACrB,IAAImB,KAAK,GAAG,IAAI,CAACC,oBAAoB,CAACb,IAAI,CAAC;MAC3CI,MAAM,CAACQ,KAAK,CAAC,IAAI,CAAC;;IAEpB,OAAOR,MAAM;EACf;EAEAU,kBAAkB,CAACrB,IAAc;IAC/B,IAAIW,MAAM,GAAG,IAAIM,KAAK,CAAC,CAAC,CAAC;IACzBN,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC;IACd,KAAK,IAAIX,IAAI,IAAIP,IAAI,EAAE;MACrB,IAAImB,KAAK,GAAG,IAAI,CAACG,oBAAoB,CAACC,IAAI,CAACC,GAAG,CAACjB,IAAI,CAAC,CAAC;MACrDI,MAAM,CAACQ,KAAK,CAAC,IAAI,CAAC;;IAEpB,OAAOR,MAAM;EACf;EAEAS,oBAAoB,CAACK,GAAW;IAC9B,IAAIN,KAAK,GAAG,CAAC;IACb,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrC,qBAAqB,CAACsC,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MAC9D,IACED,GAAG,IAAI,IAAI,CAACpC,qBAAqB,CAACqC,CAAC,CAAC,IACpCD,GAAG,GAAG,IAAI,CAACpC,qBAAqB,CAACqC,CAAC,GAAG,CAAC,CAAC,EACvC;QACAP,KAAK,GAAGO,CAAC,GAAG,CAAC;;;IAGjB,OAAOP,KAAK;EACd;EAEAG,oBAAoB,CAACG,GAAW;IAC9B,IAAIN,KAAK,GAAG,CAAC;IACb,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnC,6BAA6B,CAACoC,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MACtE,IACED,GAAG,IAAI,IAAI,CAAClC,6BAA6B,CAACmC,CAAC,CAAC,IAC5CD,GAAG,GAAG,IAAI,CAAClC,6BAA6B,CAACmC,CAAC,GAAG,CAAC,CAAC,EAC/C;QACAP,KAAK,GAAGO,CAAC,GAAG,CAAC;;;IAGjB,OAAOP,KAAK;EACd;EAEAS,mBAAmB;IACjB,IAAI,CAACC,YAAY,GAAGN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACD,YAAY,CAAC;IAC/C,IAAI,CAACjC,gBAAgB,CAACmC,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;EAC/C;EAEAG,aAAa;IACX,IAAI,IAAI,CAAC9C,QAAQ,GAAG,IAAI,CAACC,QAAQ,EAAE;MACjC,IAAI,CAACD,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,QAAQ,GAAG,GAAG;;IAErB,IAAI,CAACgB,eAAe,CAAC4B,IAAI,CAAC,CAAC,IAAI,CAAC7C,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC;EAC3D;EAEA8C,MAAM;IACJ,IAAI,CAACnD,YAAY,CAACY,UAAU,GAAG,EAAE;IACjC,IAAI,CAACX,MAAM,CAACmD,aAAa,CAAC,EAAE,CAAC;EAC/B;;AA7IWtD,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAuD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCtB/B5D,8BAAwB;MAGIA,yBAA8B;MAAAA,iBAAM;MAE1DA,8BAA2B;MACSA;QAAA,OAAS6D,YAAQ;MAAA,EAAC;MAAC7D,sBAAM;MAAAA,iBAAS;MAGxEA,8BAAyB;MAGnBA,0BAAoC;MACtCA,iBAAM;MACNA,gCAAyB;MACnBA,kCAAiB;MAAAA,iBAAK;MAC1BA,4BAAK;MAAAA,yBAAQ;MAAAA,iBAAM;MACnBA,4BAAK;MAAAA,uCAAsB;MAAAA,iBAAM;MAGrCA,gCAAuC;MAEnCA,+FACF;MAAAA,iBAAM;MACNA,gCAAwB;MACJA,+BAAc;MAAAA,iBAAQ;MACxCA,kCAME;MAFAA;QAAA;MAAA,EAA0B;QAAA,OAChB6D,yBAAqB;MAAA,EADL;MAJ5B7D,iBAME;MAACA,gCAAoB;MAAAA,oBAAG;MAAAA,iBAAM;MAElCA,gCAAwD;MACtDA,qLAEF;MAAAA,iBAAM;MACNA,4BAAK;MACsCA,kCAAiB;MAAAA,iBAAQ;MAClEA,kCASE;MAFAA;QAAA;MAAA,EAAsB;QAAA,OACZ6D,mBAAe;MAAA,EADH;MAPxB7D,iBASE;MACFA,4BAAK;MAAAA,aAAc;MAAAA,iBAAM;MAE3BA,4BAAK;MACsCA,kCAAiB;MAAAA,iBAAQ;MAClEA,kCASE;MAFAA;QAAA;MAAA,EAAsB;QAAA,OACZ6D,mBAAe;MAAA,EADH;MAPxB7D,iBASE;MACFA,4BAAK;MAAAA,aAAc;MAAAA,iBAAM;MAI/BA,gCAA4B;MASlBA;QAAA,OAAS6D,gBAAY,IAAI,CAAC;MAAA,EAAC;MAC1B7D,0BAAS;MAAAA,iBACX;MAEHA,+BAAqB;MAKjBA;QAAA,OAAS6D,gBAAY,KAAK,CAAC;MAAA,EAAC;MAC3B7D,kCAAiB;MAAAA,iBACnB;MAGLA,gCAAoC;MAC9BA,4CAA2B;MAAAA,iBAAK;MACpCA,sEAQM;MACNA,sEAQM;MACRA,iBAAM;;;MAjFFA,gBAA0B;MAA1BA,0CAA0B;MAiB1BA,eAAsB;MAAtBA,sCAAsB;MAGnBA,eAAc;MAAdA,kCAAc;MAWjBA,eAAsB;MAAtBA,sCAAsB;MAGnBA,eAAc;MAAdA,kCAAc;MAUfA,eAAoC;MAApCA,sEAAoC;MAUpCA,eAAqC;MAArCA,wEAAqC;MASnCA,eAAkB;MAAlBA,uCAAkB;MASlBA,eAAmB;MAAnBA,wCAAmB","names":["BehaviorSubject","combineLatest","first","map","switchMap","timer","i0","HistogramComponent","constructor","loginService","router","api","reverse","minValue","maxValue","ngOnInit","bloodPressureRangeRaw","generateRawRange","bloodPressureRangeLogarithmic","generateLogarithmicRange","token","LoginToken","bloodPressureBaseValues$","pollIntervalSub$","pipe","val","getUserBloodPressure","data","bloodPressure","bloodPressure$","minMaxValueSub$","baseBloodPressureValues","minMax","filter","each","switchPanel","isRaw","isRawDisplay","result","start","push","parseFloat","toFixed","calRawBucketValues","Array","fill","index","calculateRawInterval","calLogBucketValues","calculateLogInterval","Math","log","num","i","length","pollIntervalChanged","pollInterval","abs","next","minmaxChanged","logout","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\hostogram\\histogram.component.ts","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\hostogram\\histogram.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { GeneralApiService } from '../general-api.service';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subject,\n  combineLatest,\n  combineLatestWith,\n  first,\n  map,\n  switchMap,\n  timer,\n} from 'rxjs';\nimport { UserBloodPressure } from '../model/user-blood-pressure';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-hostogram',\n  templateUrl: './histogram.component.html',\n  styleUrls: ['./histogram.component.scss'],\n})\nexport class HistogramComponent implements OnInit {\n  token!: string;\n  isRawDisplay = true;\n  bloodPressureRangeRaw!: number[];\n  bloodPressureRangeLogarithmic!: number[];\n  frequencyNumber = [20, 40, 60, 80, 100].reverse();\n  pollInterval = 5;\n  bloodPressure$!: Observable<number[]>;\n  bloodPressureBaseValues$!: Observable<number[]>;\n\n  minValue = 80;\n  maxValue = 180;\n  private minMaxValueSub$ = new BehaviorSubject<number[]>([\n    this.minValue,\n    this.maxValue,\n  ]);\n\n  private pollIntervalSub$ = new BehaviorSubject<number>(5);\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private api: GeneralApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.bloodPressureRangeRaw = this.generateRawRange();\n    this.bloodPressureRangeLogarithmic = this.generateLogarithmicRange();\n\n    this.token = this.loginService.LoginToken;\n\n    this.bloodPressureBaseValues$ = this.pollIntervalSub$.pipe(\n      switchMap((val) =>\n        timer(0, val * 1000).pipe(\n          switchMap(() =>\n            this.api.getUserBloodPressure(this.token).pipe(first())\n          ),\n          map((data) => data[0].bloodPressure)\n        )\n      )\n    );\n\n    this.bloodPressure$ = combineLatest([\n      this.bloodPressureBaseValues$,\n      this.minMaxValueSub$,\n    ]).pipe(\n      map(([baseBloodPressureValues, minMax]) =>\n        baseBloodPressureValues.filter(\n          (each) => each >= minMax[0] && each <= minMax[1]\n        )\n      )\n    );\n  }\n\n  switchPanel(isRaw: boolean) {\n    this.isRawDisplay = isRaw;\n  }\n\n  generateRawRange(): number[] {\n    let result = [];\n    let start = 80;\n    while (start <= 200) {\n      result.push(start);\n      start += 10;\n    }\n    return result;\n  }\n\n  generateLogarithmicRange(): number[] {\n    let result = [];\n    let start = 4.0;\n    while (start <= 5.4) {\n      result.push(start);\n      start += 0.2;\n      start = parseFloat(start.toFixed(1));\n    }\n    return result;\n  }\n\n  calRawBucketValues(data: number[]): number[] {\n    let result = new Array(11);\n    result.fill(0);\n    for (let each of data) {\n      let index = this.calculateRawInterval(each);\n      result[index] += 1;\n    }\n    return result;\n  }\n\n  calLogBucketValues(data: number[]): number[] {\n    let result = new Array(8);\n    result.fill(0);\n    for (let each of data) {\n      let index = this.calculateLogInterval(Math.log(each));\n      result[index] += 1;\n    }\n    return result;\n  }\n\n  calculateRawInterval(num: number) {\n    let index = 0;\n    for (let i = 0; i < this.bloodPressureRangeRaw.length - 1; i++) {\n      if (\n        num >= this.bloodPressureRangeRaw[i] &&\n        num < this.bloodPressureRangeRaw[i + 1]\n      ) {\n        index = i + 1;\n      }\n    }\n    return index;\n  }\n\n  calculateLogInterval(num: number) {\n    let index = 0;\n    for (let i = 0; i < this.bloodPressureRangeLogarithmic.length - 1; i++) {\n      if (\n        num >= this.bloodPressureRangeLogarithmic[i] &&\n        num < this.bloodPressureRangeLogarithmic[i + 1]\n      ) {\n        index = i + 1;\n      }\n    }\n    return index;\n  }\n\n  pollIntervalChanged() {\n    this.pollInterval = Math.abs(this.pollInterval);\n    this.pollIntervalSub$.next(this.pollInterval);\n  }\n\n  minmaxChanged() {\n    if (this.minValue > this.maxValue) {\n      this.minValue = 80;\n      this.maxValue = 180;\n    }\n    this.minMaxValueSub$.next([this.minValue, this.maxValue]);\n  }\n\n  logout() {\n    this.loginService.LoginToken = '';\n    this.router.navigateByUrl('');\n  }\n}\n","<div class=\"histo-body\">\n  <div class=\"main-histo\">\n    <div class=\"card top-menu\">\n      <div class=\"uol-icon\"><img src=\"assets/img/uol.jpg\"></div>\n\n      <div class=\"logout-button\">\n        <button class=\"btn btn-secondary\" (click)=\"logout()\">Logout</button>\n      </div>\n    </div>\n    <div class=\"top-section\">\n      <div class=\"card shadow user-profile\">\n        <div>\n          <img src=\"assets/img/profile.png\" />\n        </div>\n        <div class=\"basic-infos\">\n          <h4>My Blood Pressure</h4>\n          <div>Age : 27</div>\n          <div>City : Luxembourg City</div>\n        </div>\n      </div>\n      <div class=\"card shadow control-panel\">\n        <div class=\"alert alert-warning reminding\" role=\"alert\">\n          Please press enter or click white place after you changing the poll interval\n        </div>\n        <div class=\"poll-input\">\n          <label for=\"poll\">Poll Interval:</label>\n          <input\n            id=\"poll\"\n            class=\"form-control\"\n            type=\"number\"\n            [(ngModel)]=\"pollInterval\"\n            (change)=\"pollIntervalChanged()\"\n          /> <div class=\"second\">(s)</div>\n        </div>\n        <div class=\"alert alert-warning reminding\" role=\"alert\">\n          Can use keyboard arrows or mouse to control the range,when min value is greater than max value will reset the range back to 80 to\n          180, should always be(min < max)\n        </div>\n        <div>\n          <label for=\"minRange\" class=\"form-label\">Min Value(80-180)</label>\n          <input\n            type=\"range\"\n            class=\"form-range\"\n            min=\"80\"\n            max=\"180\"\n            step=\"1\"\n            id=\"minRange\"\n            [(ngModel)]=\"minValue\"\n            (change)=\"minmaxChanged()\"\n          />\n          <div>{{ minValue }}</div>\n        </div>\n        <div>\n          <label for=\"maxRange\" class=\"form-label\">Max Value(80-180)</label>\n          <input\n            type=\"range\"\n            class=\"form-range\"\n            min=\"80\"\n            max=\"180\"\n            step=\"1\"\n            id=\"maxRange\"\n            [(ngModel)]=\"maxValue\"\n            (change)=\"minmaxChanged()\"\n          />\n          <div>{{ maxValue }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"buttom-section\">\n      <div class=\"card shadow\">\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              [ngClass]=\"{ active: isRawDisplay }\"\n              aria-current=\"page\"\n              href=\"javascript:void(null);\"\n              (click)=\"switchPanel(true)\"\n              >Raw Datum</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              [ngClass]=\"{ active: !isRawDisplay }\"\n              href=\"javascript:void(null);\"\n              (click)=\"switchPanel(false)\"\n              >Logarithmic Datum</a\n            >\n          </li>\n        </ul>\n        <div class=\"card-body diagram-body\">\n          <h2>My Blood Pressure Histogram</h2>\n          <div *ngIf=\"isRawDisplay\">\n            <div *ngIf=\"bloodPressure$ | async as bp\">\n              <app-histogram-diagram\n                [frequencyNumber]=\"frequencyNumber\"\n                [bloodPressureRange]=\"bloodPressureRangeRaw\"\n                [frequency]=\"calRawBucketValues(bp)\"\n              ></app-histogram-diagram>\n            </div>\n          </div>\n          <div *ngIf=\"!isRawDisplay\">\n            <div *ngIf=\"bloodPressure$ | async as bp\">\n              <app-histogram-diagram\n                [frequencyNumber]=\"frequencyNumber\"\n                [bloodPressureRange]=\"bloodPressureRangeLogarithmic\"\n                [frequency]=\"calLogBucketValues(bp)\"\n              ></app-histogram-diagram>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}