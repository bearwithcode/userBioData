{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../general-api.service\";\nimport * as i4 from \"../login.service\";\nexport class LoginComponent {\n  constructor(formBuilder, router, api, loginService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.api = api;\n    this.loginService = loginService;\n    this.isSubmitted = false;\n    this.accountNotFound = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', Validators.required]\n    });\n  }\n  get formEmail() {\n    return this.form.controls['email'];\n  }\n  get formPassword() {\n    return this.form.controls['password'];\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    let user = {\n      id: null,\n      email: this.formEmail.value,\n      password: this.formPassword.value\n    };\n    this.api.login(user).pipe(first()).subscribe({\n      next: data => {\n        if (data.length === 0) {\n          this.accountNotFound = true;\n        } else {\n          this.accountNotFound = false;\n          let token = data[0].token || \"\";\n          this.loginService.LoginToken = token;\n          this.router.navigateByUrl('hostogram');\n        }\n      },\n      error: error => {},\n      complete: () => {}\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GeneralApiService), i0.ɵɵdirectiveInject(i4.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"main-login\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\".is-invalid[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.login-page[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  padding-top: 20%;\\n}\\n.login-page[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%] {\\n  width: 55%;\\n  margin: 5%;\\n}\\n.login-page[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: auto;\\n  position: fixed;\\n  top: 0%;\\n  z-index: -1;\\n}\\n.login-page[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   .login-header[_ngcontent-%COMP%] {\\n  color: blue;\\n  font-size: xxx-large;\\n  font-weight: bolder;\\n}\\n.login-page[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n  width: 30%;\\n  margin-right: 5%;\\n}\\n.login-page[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.login-page[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  font-size: larger;\\n  font-weight: bolder;\\n}\\n.login-page[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   .invalid-submit[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtBQUNGO0FBQ0U7RUFDRSxVQUFBO0VBQ0EsVUFBQTtBQUNKO0FBQ0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtBQUNOO0FBRUk7RUFDRSxXQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtBQUFOO0FBSUU7RUFDRSxVQUFBO0VBQ0EsZ0JBQUE7QUFGSjtBQUtFO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBSEo7QUFLSTtFQUNFLFdBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0FBSE47QUFNSTtFQUNFLGtCQUFBO0FBSk4iLCJzb3VyY2VzQ29udGVudCI6WyIuaXMtaW52YWxpZHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5sb2dpbi1wYWdle1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwYWRkaW5nLXRvcDogMjAlO1xyXG5cclxuICAuaW5mb3tcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICBtYXJnaW46IDUlO1xyXG5cclxuICAgIGltZ3tcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICB0b3A6IDAlO1xyXG4gICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuXHJcbiAgICAubG9naW4taGVhZGVye1xyXG4gICAgICBjb2xvcjogYmx1ZTtcclxuICAgICAgZm9udC1zaXplOiB4eHgtbGFyZ2U7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubG9naW4tZm9ybXtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xyXG4gIH1cclxuXHJcbiAgLnN1Ym1pdC1idXR0b257XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHJcbiAgICBidXR0b257XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6IGxhcmdlcjtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIH1cclxuXHJcbiAgICAuaW52YWxpZC1zdWJtaXR7XHJcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,KAAK,QAAQ,MAAM;;;;;;AAQ5B,OAAM,MAAOC,cAAc;EAKzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,GAAsB,EACtBC,YAA0B;IAH1B,gBAAW,GAAXH,WAAW;IACX,WAAM,GAANC,MAAM;IACN,QAAG,GAAHC,GAAG;IACH,iBAAY,GAAZC,YAAY;IAPtB,gBAAW,GAAG,KAAK;IACnB,oBAAe,GAAG,KAAK;EAOpB;EAEHC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC;MAClGC,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACY,QAAQ;KACnC,CAAC;EACJ;EAEA,IAAIG,SAAS;IACX,OAAO,IAAI,CAACN,IAAI,CAACO,QAAQ,CAAC,OAAO,CAAC;EACpC;EAEA,IAAIC,YAAY;IACd,OAAO,IAAI,CAACR,IAAI,CAACO,QAAQ,CAAC,UAAU,CAAC;EACvC;EAEAE,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI;IAEvB,IAAG,IAAI,CAACV,IAAI,CAACW,OAAO,EAAC;MACnB;;IAGF,IAAIC,IAAI,GAAQ;MACdC,EAAE,EAAE,IAAI;MACRX,KAAK,EAAE,IAAI,CAACI,SAAS,CAACQ,KAAK;MAC3BT,QAAQ,EAAE,IAAI,CAACG,YAAY,CAACM;KAC7B;IAED,IAAI,CAACjB,GAAG,CAACkB,KAAK,CAACH,IAAI,CAAC,CACnBI,IAAI,CAACxB,KAAK,EAAE,CAAC,CACbyB,SAAS,CAAC;MACTC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAGA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAC;UACnB,IAAI,CAACC,eAAe,GAAG,IAAI;SAC5B,MACG;UACF,IAAI,CAACA,eAAe,GAAG,KAAK;UAC5B,IAAIC,KAAK,GAAGH,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,IAAI,EAAE;UAC/B,IAAI,CAACxB,YAAY,CAACyB,UAAU,GAAGD,KAAK;UACpC,IAAI,CAAC1B,MAAM,CAAC4B,aAAa,CAAC,WAAW,CAAC;;MAG1C,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG,CAAE,CAAC;MAClBC,QAAQ,EAAE,MAAK,CAAE;KACpB,CAAC;EACF;;AA1DWjC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BC,yBAEM","names":["Validators","first","LoginComponent","constructor","formBuilder","router","api","loginService","ngOnInit","form","group","email","required","pattern","password","formEmail","controls","formPassword","onSubmit","isSubmitted","invalid","user","id","value","login","pipe","subscribe","next","data","length","accountNotFound","token","LoginToken","navigateByUrl","error","complete","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.ts","D:\\practise\\ClinicalDataApp\\my-clinical-data-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GeneralApiService } from '../general-api.service';\nimport { User } from '../model/user';\nimport { first } from 'rxjs';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form!: FormGroup;\n  isSubmitted = false;\n  accountNotFound = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private api: GeneralApiService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get formEmail() {\n    return this.form.controls['email'];\n  }\n\n  get formPassword() {\n    return this.form.controls['password'];\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if(this.form.invalid){\n      return;\n    }\n\n    let user:User = {\n      id: null,\n      email: this.formEmail.value,\n      password: this.formPassword.value\n    }\n\n    this.api.login(user)\n    .pipe(first())\n    .subscribe({\n      next: data => {\n        if(data.length === 0){\n          this.accountNotFound = true;\n        }\n        else{\n          this.accountNotFound = false;\n          let token = data[0].token || \"\";\n          this.loginService.LoginToken = token;\n          this.router.navigateByUrl('hostogram');\n        }\n\n      },\n      error: error => {},\n      complete: () => {}\n  })\n  }\n}\n","<div class=\"main-login\">\n\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}